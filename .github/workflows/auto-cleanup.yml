name: Delete Old Workflow Runs
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # 매일 자정에 실행
    
jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Set environment variables
        run: echo "WORKFLOW_NAME=Send Discord Webhook Every 30 Minutes" >> $GITHUB_ENV
        
      - name: Install latest GitHub CLI (gh)
        run: |
          sudo rm -rf /usr/bin/gh
          curl -fsSL https://github.com/cli/cli/releases/latest/download/gh_$(curl -s https://api.github.com/repos/cli/cli/releases/latest | grep tag_name | cut -d '"' -f 4 | sed 's/^v//')_linux_amd64.tar.gz | tar -xz
          sudo cp gh_*/bin/gh /usr/bin/gh
          gh --version
          
      - name: Delete runs older than 1 day
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          # 인증 상태 확인
          gh auth status
          
          workflow_id=$(gh workflow list --json name,id -q ".[] | select(.name == \"$WORKFLOW_NAME\") | .id")
          echo "Workflow ID: $workflow_id"
          
          if [ -z "$workflow_id" ]; then
            echo "Workflow not found"
            exit 1
          fi
          
          echo "Deleting runs older than 1 day for workflow ID: $workflow_id"
          
          # 하루 전 시간을 ISO 8601 형식으로 계산
          one_day_ago=$(date -d '1 day ago' --iso-8601=seconds)
          echo "기준 시간: $one_day_ago"
          
          # 페이지네이션을 사용하여 모든 워크플로우 실행을 조회
          page=1
          total_deleted=0
          
          while true; do
            echo "페이지 $page 조회 중..."
            # 모든 실행을 최신순으로 조회 (각 페이지 최대 100개)
            runs=$(gh run list --workflow="$workflow_id" --limit 100 --json databaseId,createdAt,status,conclusion -q '.[] | "\(.databaseId) \(.createdAt)"' --page $page)
            
            # 결과가 없으면 종료
            if [ -z "$runs" ]; then
              echo "더 이상 실행 결과가 없습니다."
              break
            fi
            
            deleted_count=0
            
            # 각 실행에 대해 생성 시간 확인 및 삭제
            while read -r run; do
              # 실행 ID와 생성 시간 추출
              run_id=$(echo $run | cut -d' ' -f1)
              created_at=$(echo $run | cut -d' ' -f2-)
              
              # 생성 시간이 하루 이상 지났는지 확인
              if [[ "$created_at" < "$one_day_ago" ]]; then
                echo "삭제 중: $run_id (생성 시간: $created_at)"
                echo y | gh run delete "$run_id"
                deleted_count=$((deleted_count + 1))
                total_deleted=$((total_deleted + 1))
              else
                echo "유지: $run_id (생성 시간: $created_at)"
              fi
            done <<< "$runs"
            
            echo "현재 페이지에서 $deleted_count개 실행 삭제됨"
            
            # 현재 페이지에서 삭제한 항목이 없으면 더 오래된 항목도 없을 것이므로 종료
            if [ $deleted_count -eq 0 ]; then
              echo "더 이상 삭제할 항목이 없습니다."
              break
            fi
            
            # 다음 페이지로
            page=$((page + 1))
          done
          
          echo "총 $total_deleted개의 오래된 워크플로우 실행이 삭제되었습니다."
